syntax = "proto3";

package node;

service GNodeService {
        rpc ExecuteFunction (AntMes) returns (AntRet);
        rpc CheckReceiver (HealthRequest) returns (AntRet);
        rpc GetClientStream (stream AntMes) returns (stream AntMes) {}
        rpc AskConnection (AskConnectionRequest) returns (PingRet) {}
        rpc Ping (AntMes) returns (PingRet) {}
        rpc Healthcheck(HealthRequest) returns (AntRet) {}
}


message AntMes {
        string id = 1;
        string origin = 2;
        string from_client = 3;
        string target = 4;
        bool isAnswer = 5;
        bool return_answer = 6;
        bool is_path_writer = 7;
        string origin_id = 8;
        repeated string path = 9;
        int32 path_index = 10;
        string function = 11;
        repeated string args = 12;
        string transfer_id = 13;
        int64 order = 14;
        int64 nb_block_total = 15;
        int64 nb_block = 16;
        int64 size = 17;
        string targeted_path = 18;
        bool no_blocking = 19;
        bool debug = 20;
        bool answer_wait = 21;
        string errorMes = 22;
        int32 nb_thread = 23;
        int32 thread = 24;
        int32 duplicate = 25;
        int32 version =26;
        bool eof = 27;
        string user_name = 29;
        string user_token = 30;
        repeated string nodes = 31;
        bytes data = 32;
}

message AntRet{
        bool ack = 1;
        string id = 2;
}

message HealthRequest {
        
}

message PingRet{
        string host = 1;
        string name = 2;
        int32 nb_node = 3;
        int32 nb_duplicate = 4;
        int32 client_number = 5;
}

message AskConnectionRequest{
        string name = 1;
        string host = 2;
        string ip = 3;
}

message EmptyRet{
        
}

